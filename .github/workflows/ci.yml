name: FastCGI Client CI PHP 7.1 - 7.4

on:
  push:
    branches:
      - master
      - development

    tags:
      - 'v*.*.*'

  # Run tests for any PRs.
  pull_request:

jobs:
  static-analyzers:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check for PHP parse errors
        run: docker run --rm -v $(pwd):/app php:7.4-cli -c 'find /app/src -type f -name "*.php" -print0 | xargs -0 -n1 -P4 php -l -n | (! grep -v "No syntax errors detected" )'

      - name: Composer validate
        run: docker run --rm -v $(pwd):/app composer validate

      - name: Composer update
        run: docker run --rm -v $(pwd):/app composer update -o -v --ignore-platform-reqs

      - name: Run PHPStan
        run: docker run --rm -v $(pwd):/app phpstan/phpstan analyze --level=max /app/src

  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build docker images
        run: docker-compose build --pull --parallel

      - name: Pull docker images
        run: docker-compose pull

      - name: Composer update
        run: docker-compose run --rm composer

      - name: Bring containers up
        run: docker-compose up -d --force-recreate php71

      - name: Run unit tests on PHP 7.1
        run: >
          docker-compose exec -T php71 php ${PHP_OPTIONS}
          /repo/vendor/bin/phpunit7.phar
          -c /repo/build
          --coverage-clover=/repo/coverage.xml
        env:
          COMPOSE_INTERACTIVE_NO_CLI: 1
          PHP_OPTIONS: "-d error_reporting=-1 -d auto_prepend_file=/repo/build/xdebug-filter.php"

      - name: Upload code coverage to codecov.io
        run: bash <(curl -s https://codecov.io/bash)

      - name: Bring containers up
        run: |
          docker-compose down
          docker-compose up -d --force-recreate php72

      - name: Run unit tests on PHP 7.2
        run: >
          docker-compose exec -T php72 php ${PHP_OPTIONS}
          /repo/vendor/bin/phpunit8.phar
          -c /repo/build
          --coverage-clover=/repo/coverage.xml
        env:
          COMPOSE_INTERACTIVE_NO_CLI: 1
          PHP_OPTIONS: "-d error_reporting=-1 -d auto_prepend_file=/repo/build/xdebug-filter.php"

      - name: Upload code coverage to codecov.io
        run: bash <(curl -s https://codecov.io/bash)

      - name: Bring containers up
        run: |
          docker-compose down
          docker-compose up -d --force-recreate php73

      - name: Run unit tests on PHP 7.3
        run: >
          docker-compose exec -T php73 php ${PHP_OPTIONS}
          /repo/vendor/bin/phpunit9.phar
          -c /repo/build
          --coverage-clover=/repo/coverage.xml
        env:
          COMPOSE_INTERACTIVE_NO_CLI: 1
          PHP_OPTIONS: "-d error_reporting=-1 -d auto_prepend_file=/repo/build/xdebug-filter.php"

      - name: Upload code coverage to codecov.io
        run: bash <(curl -s https://codecov.io/bash)

      - name: Bring containers up
        run: |
          docker-compose down
          docker-compose up -d --force-recreate php74

      - name: Run unit tests on PHP 7.4
        run: >
          docker-compose exec -T php74 php ${PHP_OPTIONS}
          /repo/vendor/bin/phpunit9.phar
          -c /repo/build
          --coverage-clover=/repo/coverage.xml
        env:
          COMPOSE_INTERACTIVE_NO_CLI: 1
          PHP_OPTIONS: "-d error_reporting=-1 -d auto_prepend_file=/repo/build/xdebug-filter.php"

      - name: Upload code coverage to codecov.io
        run: bash <(curl -s https://codecov.io/bash)

  release:
    needs:
      - static-analyzers
      - unit-tests

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract version
        id: data
        run: |
          # Strip git ref prefix from version
          RELEASE_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && RELEASE_VERSION=$(echo $RELEASE_VERSION | sed -e 's/^v//')

          echo $RELEASE_VERSION
          echo "##[set-output name=version;]$RELEASE_VERSION"

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Version ${{ steps.data.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  roave_bc_check:
    name: Roave BC Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Roave BC Check
        uses: docker://nyholm/roave-bc-check-ga

